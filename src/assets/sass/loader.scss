
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$AOSP-primary: mat-palette($mat-blue-grey);
$AOSP-accent: mat-palette($mat-amber, A200, A100, A400);

// The warn palette is optional (defaults to red).
$AOSP-warn: mat-palette($mat-deep-orange);

// Create the theme object (a Sass map containing all of the palettes).
$AOSP-theme: mat-light-theme($AOSP-primary, $AOSP-accent, $AOSP-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($AOSP-theme);

@import 'variables';

$_overlay-bg: main-palette(400);
$_colors: (
  1: main-palette(300),
  2: accent-palette(500),
  3: main-palette(900),
  4: main-palette(900),
  5: main-palette(900)
);
//loader 3
$translateX: 55px;
$translateY: 57px;
$time: 2.1s;
$scale: 1.1;
//loader 4
$loader-4-size: 50px;
$loader-4-border-size: 2px;

.overlay {
  background: $_overlay-bg;
  bottom: 0;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 9998;
}
.loader {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  z-index: 9999;

  span {
    animation: slide 1s infinite;
    border-radius: 50%;
    display: inline-block;
    height: 24px;
    width: 24px;

    &:nth-child(1) {
      animation-delay: .1s;
      background: map-get($_colors, 1);
    }
    &:nth-child(2) {
      animation-delay: .2s;
      background: map-get($_colors, 2);
    }
    &:nth-child(3) {
      animation-delay: .3s;
      background: map-get($_colors, 3);
    }
    &:nth-child(4) {
      animation-delay: .4s;
      background: map-get($_colors, 4);
    }
    &:nth-child(5) {
      animation-delay: .5s;
      background: map-get($_colors, 5);
    }
  }
}
@keyframes slide {
  0% {
    transform: scale(1);
  }
  50% {
    opacity: 0.3;
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}

//loader 2
.loader-2 {
  span {
    animation: loader-2 1s infinite;
    border-radius: 0;
    height: 5px;
    width: 9px;
  }
}
@keyframes loader-2 {
  0% {
    transform: translateY(0px);
  }
  25% {
    transform: translateY(15px);
  }
  50% {
    transform: translateY(0px);
  }
  100% {
    transform: translateY(0px);
  }
}

.loader-3 {
  height: 100px;
  width: 100px;

  span {
    animation: loader-3 $time linear infinite;
    height: 14px;
    left: 50%;
    margin: -7px 0 0 -7px;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 14px;

    &:nth-child(1) {
      animation-delay: -$time/3;
    }
    &:nth-child(2) {
      animation-delay: -$time/1.5;
    }
    &:nth-child(3) {
      animation-delay: -$time;
    }
    &:nth-child(4) {
      display: none;
    }
    &:nth-child(5) {
      display: none;
    }
  }
}
@keyframes loader-3 {
  0% {
    transform: translate(0, 0);
  }
  12.5% {
    transform: translate(($translateX / 2), -($translateY)) scale($scale);
  }
  25% {
    transform: translate($translateX, 0);
    animation-timing-function: ease-out;
  }
  37.5% {
    transform: translate(($translateX / 2), $translateY);
  }
  50% {
    transform: translate(0, 0);
  }
  62.5% {
    transform: translate(-($translateX / 2), -($translateY)) scale($scale);
    animation-timing-function: ease-in;
  }
  75% {
    transform: translate(-($translateX), 0);
    animation-timing-function: ease-out;
  }
  87.5% {
    transform: translate(-($translateX / 2), $translateY);
  }
  100% {
    transform: translate(0, 0);
  }
}

.loader-4 {
  height: $loader-4-size;
  width: $loader-4-size;

  span {
    animation: none;
    display: block;
    height: 100%;
    width: 100%;

    &:nth-child(1) {
      background: none;
      box-shadow: 0 0 ($loader-4-border-size * 2) $loader-4-border-size rgba(map-get($_colors, 1),.3) inset;
    }
    &:nth-child(2) {
      animation: rotate-360 1s linear infinite;
      background: none;
      box-shadow: 0 $loader-4-border-size 0 map-get($_colors, 2) inset;
      left: 0;
      position: absolute;
      top: 0;
    }
    &:nth-child(3),
    &:nth-child(4),
    &:nth-child(5) {
      display: none;
    }
  }
}
@keyframes rotate-360 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

//loader 5
.loader-5 {
  height: 60px;
  width: 60px;

  span {
    animation: none;
    border-radius: 0;
    position: absolute;
    transform-origin: 0 0;

    &:nth-child(1) {
      animation: loader-5-1 4s infinite;
      height: 2px;
      left: 0;
      top: 0;
      width: 100%;
    }
    &:nth-child(2) {
      animation: loader-5-2 4s infinite;
      height: 100%;
      right: 0;
      top: 0;
      width: 2px;
    }
    &:nth-child(3) {
      animation: loader-5-3 4s infinite;
      bottom: 0;
      height: 2px;
      right: 0;
      transform-origin: 100% 100%;
      width: 100%;
    }
    &:nth-child(4) {
      animation: loader-5-4 4s infinite;
      bottom: 0;
      height: 100%;
      left: 0;
      transform-origin: 100% 100%;
      width: 2px;
    }
    &:nth-child(5) {
      display: none;
    }
  }
}
@keyframes loader-5-1 {
  0% {
    transform: scale(0, 1);
  }
  12.5% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1, 1);
  }
  62.5% {
    transform: scale(0, 1);
    transform-origin: 100% 100%;
  }
  100% {
    transform: scale(0, 1);
  }
}
@keyframes loader-5-2 {
  0% {
    transform: scale(1, 0);
  }
  12.5% {
    transform: scale(1, 0);
  }
  25% {
    transform: scale(1, 1);
    transform-origin: 0 0;
  }
  62.5% {
    transform: scale(1, 1);
  }
  75% {
    transform: scale(1, 0);
    transform-origin: 100% 100%;
  }
  100% {
    transform: scale(1, 0);
  }
}
@keyframes loader-5-3 {
  0% {
    transform: scale(0, 1);
  }
  25% {
    transform: scale(0, 1);
  }
  37.5% {
    transform: scale(1, 1);
    transform-origin: 100% 100%;
  }
  75% {
    transform: scale(1, 1);
  }
  87.5% {
    transform: scale(0, 1);
    transform-origin: 0 0;
  }
  100% {
    transform: scale(0, 1);
  }
}
@keyframes loader-5-4 {
  0% {
    transform: scale(1, 0);
  }
  37.5% {
    transform: scale(1, 0);
  }
  50% {
    transform: scale(1, 1);
    transform-origin: 100% 100%;
  }
  87.5% {
    transform: scale(1, 1);
  }
  100% {
    transform: scale(1, 0);
    transform-origin: 0 0;
  }
}
