@import '~assets/sass/variables';

$_btn-border-width: 1px;
$_btn-border-style: solid;
$_btn-fs: 0.875rem;
$_btn-ff: $main-ff;
$_btn-fw: 500;
$_btn-lh: $module-rem * 2 / $_btn-fs;
$_btn-tt: uppercase;
$_btn-padding: $module-rem ($module-rem * 1.5);
$_btn-shape: $shape;
$_btn-transition: $animation;

$_btn-lg-padding: ($module-rem * 1.5) ($module-rem * 2.5);
$_btn-lg-fs: ($_btn-fs * 1.2);
$_btn-lg-lh: $module-rem * 2 / $_btn-lg-fs;

$_btn-sm-padding: ($module-rem) ($module-rem / 2);
$_btn-sm-fs: ($_btn-fs * .8);
$_btn-sm-lh: $module-rem / $_btn-sm-fs;

//btn colors
$_types: (
	default: (
	 bg: main-palette(AOSP500),
   color: main-contrast(500),
   hover-bg: main-palette(700),
   hover-color: main-contrast(700)
  ),
  accent: (
   bg: accent-palette(500),
   color: accent-contrast(500),
   hover-bg: accent-palette(700),
   hover-color: accent-contrast(700)
  ),
  success: (
    bg: $success-color,
    color: $success-contrast,
    hover-bg: darken($success-color, 10%),
    hover-color: darken($success-contrast, 10%)
  ),
  info: (
    bg: $info-color,
    color: $info-contrast,
    hover-bg: darken($info-color, 10%),
    hover-color: darken($info-contrast, 10%)
  ),
  warning: (
    bg: $warning-color,
    color: $warning-contrast,
    hover-bg: darken($warning-color, 10%),
    hover-color: darken($warning-contrast, 10%)
  ),
  error: (
    bg: $error-color,
    color: $error-contrast,
    hover-bg: darken($error-color, 10%),
    hover-color: darken($error-contrast, 10%)
  )
);
@-webkit-keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
  }
}

:host {
	align-items: center;
  border: 0;
  border-radius: $_btn-shape;
  cursor: pointer;
  display: inline-flex;
  font-family: $_btn-ff;
  font-size: $_btn-fs;
  justify-content: center;
  line-height: unset;
  outline: none;
  padding: 5px;
	position: relative;
  text-align: center;
  text-transform: $_btn-tt;
  touch-action: manipulation;
  transition:
		background .2s $_btn-transition,
    border .2s $_btn-transition,
    color .2s $_btn-transition,
    opacity .2s $_btn-transition;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  will-change: background, border, color, opacity;
  -webkit-appearance: none;

  .btn-text {
    margin: 0 ($module-rem / 2);
    min-height: #{$_btn-fs * $_btn-lh};
    padding-top: 1px;

    &:empty {
      margin: 0;
    }
  }
  .btn-line {
    border-width: $_btn-border-width;
    border-style: $_btn-border-style;
    border-color: inherit;
    border-radius: inherit;
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
		top: 0;
		z-index: 2;
  }
  .btn-icon {
    font-size: 1.3em;
    margin: 0 ($module-rem / 2);
  }
  .btn-loader {
    align-items: center;
    border-radius: inherit;
    display: flex;
    font-size: 150%;
    height: 100%;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    visibility: hidden;
    width: 100%;

    .icon {
      animation: rotation 1s infinite linear;
    }
  }
  &.btn-block {
    display: block;
    width: 100%;
  }
  &.btn-left {
    justify-content: flex-start;
    text-align: left;
  }
  &.btn-right {
    justify-content: flex-end;
    text-align: right;
  }
  &.btn-lg {
    font-size: $_btn-lg-fs;
    line-height: $_btn-lg-lh;
    padding: $_btn-lg-padding;

    .btn-text {
      min-height: #{$_btn-lg-fs * $_btn-lg-lh};
    }
  }
  &.btn-sm {
    font-size: $_btn-sm-fs;
    line-height: $_btn-sm-lh;
    padding: $_btn-sm-padding;

    .btn-text {
      min-height: #{$_btn-sm-fs * $_btn-sm-lh};
    }
  }

  //colors - (default, accent, success, info, warning, error)
  @each $_type, $_color in $_types {
    &.btn-#{$_type} {
      background: map-get($_color, bg);
			color: map-get($_color, color);

      &:hover {
        background: map-get($_color, hover-bg);
        color: map-get($_color, hover-color);
      }
      &.btn-outline {
        border-color: map-get($_color, bg);
        color: map-get($_color, bg);

        &:hover,
        .active & {
          background: map-get($_color, bg);
          color: map-get($_color, color);
        }
      }
    }
  }
  &.btn-outline {
    background: transparent;
  }
  &.btn-disabled {
    cursor: not-allowed;
    opacity: .6;
    pointer-events: none;
  }
  &.btn-load {
    cursor: not-allowed;
    pointer-events: none;

    .btn-text,
    .btn-icon {
      visibility: hidden;
    }
    .btn-loader {
      visibility: visible;
    }
  }
  &.btn-icon-animation {
    .btn-icon {
      align-items: center;
      bottom: 0;
      display: flex;
      justify-content: center;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      transition: transform .2s $_btn-transition;
      transform: scale(0);
      will-change: transform;
    }
    .btn-text {
      transition: opacity .2s $_btn-transition;
      will-change: opacity;
    }
    &:hover,
    .active & {
      .btn-icon {
        transform: scale(1);
      }
      .btn-text {
        opacity: 0;
      }
    }
  }
}
::ng-deep {
  a.w-btn {
    text-decoration: none;
  }
}
