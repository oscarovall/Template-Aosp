@import "~assets/sass/variables";

$_shape: 0;
$_animation: $animation;

$_types: (
	default: (
	 bg: accent-palette(500),
   color: #f5f5f5,
   border-color: accent-palette(500)
  ),
  success: (
    bg: $success-color,
    color: $success-contrast,
    border-color:$success-color
  ),
  info: (
    bg: $info-color,
    color: $info-contrast,
    border-color: $info-color
  ),
  warning: (
    bg: $warning-color,
    color: $warning-contrast,
    border-color: $warning-color
  ),
  error: (
    bg: $error-color,
    color: $error-contrast,
    border-color: $error-color
  )
);

:host {
	align-items: stretch;
	border: 0 solid;
	display: flex;
	border-radius: $_shape;
	flex-flow: row nowrap;
	position: relative;
	padding: $module-rem $module-rem * 2;

	&.with-icon {
		border-left-width: 4.5 * $module-rem;
		border-left-color: rgba(#000,.15) !important;
	}
	&.icon-right {
		border-left-width:  0;
		border-right-width: 4.5 * $module-rem;
		border-right-color: rgba(#000,.15) !important;

		.alert-icon {
			left: 100%;
			right: -$module-rem * 4;
		}
	}
	.content {
		align-self: center;
		display: block;
		flex: 1;

		.title {
			font-size: 1.25em;
			font-weight: 500;
			margin-bottom: $module-rem/2;
		}
		.message {
			font-size: 1.1em;
		}
	}

	.close {
		cursor: pointer;
		font-size: 1.25em;
		opacity: .7;
		transition: opacity .3s $_animation;
		&:hover {
			opacity: 1;
		}
	}

	.alert-icon {
		left: -$module-rem * 4;
		position: absolute;
		font-size: 1.25em;
		margin-top: -2px;
		text-align: center;
		width: $module-rem * 4;
	}

	@each $_type, $_color in $_types {
    &.alert-#{$_type} {
      background: map-get($_color, bg);
			color: map-get($_color, color);
			border-color: map-get($map: $_color, $key: border-color);

      &.outline {
				border: 1px solid;
				border-color: map-get($_color, bg);
				background: transparent;
				color: #fff;
				
				.close {
					color: map-get($map: $_color, $key: bg);
				}
			}
    }
	}
}
