@import '~assets/sass/variables';

$_bg: (
  default: transparent,
  hover: transparent,
  active: main-palette(500),
  disabled: rgba(#fff,.1)
);
$_border: (
  default: main-palette(500),
  hover: main-palette(500),
  active: main-palette(500),
  disabled: rgba(#fff,.2)
);
$_color: (
  default: #fff,
  hover: #fff,
  active: accent-palette(500),
  disabled: rgba(#fff,.2)
);
$_label-color: (
  default: inherit,
  hover: inherit,
  active: inherit,
  disabled: #ccc
);

$_border-style: solid;
$_border-width: 1px;
$_fs: 1rem;
$_shape: 500px;
$_animation: $animation;
$_height: $module-rem * 2;
$_width: $module-rem * 4;

:host {
  display: inline-flex;
  line-height: 1;
  vertical-align: top;
  transition: color .2s $animation;

  .tc-switcher-wrap {
    align-items: center;
    cursor: pointer;
    display: flex;

    .tc-switcher-handle {
      align-items: center;
      background: map-get($_bg, default);
      border: $_border-width $_border-style map-get($_border, default);
      border-radius: $_shape;
      color: map-get($_border, default);
      cursor: inherit;
      display: flex;
      height: $_height;
      margin: 0;
      padding: 0 ($_width / 4);
      position: relative;
      transition:
        background .2s $animation,
        border .2s $animation,
        color .2s $animation;
      width: $_width;

      .switcher-input {
        cursor: inherit;
        opacity: 0;
        position: absolute;
      }
      .check-detector {
        background: map-get($_color, default);
        border-radius: 50%;
        display: block;
        height: $_height / 1.6;
        left: - $_border-width;
        position: absolute;
        transform: translateX(($_height - ($_height / 1.6)) / 2);
        transition:
          background .2s $animation,
          transform .2s $animation;
        width: $_height / 1.6;
      }
    }
    .tc-switcher-label {
      color: map-get($_label-color, default);
      margin-left: 10px;
      transition: color .2s $animation;

      &:empty {
        display: none;
      }
    }
    &:hover {
      .tc-switcher-handle {
        background: map-get($_bg, hover);
        border-color: map-get($_border, hover);
        color: map-get($_color, hover);

        .check-detector {
          background: map-get($_color, hover);
        }
      }
      .tc-switcher-label {
        color: map-get($_label-color, hover);
      }
    }
  }
  &.checked {
    .tc-switcher-wrap {
      .tc-switcher-handle {
        background: map-get($_bg, active);
        border-color: map-get($_border, active);

        .check-detector {
          background: map-get($_color, active);
          transform: translateX($_width - ($_height / 1.6) - (($_height - ($_height / 1.6)) / 2));
        }
      }
      .tc-switcher-label {
        color: map-get($_label-color, active);
      }
    }
  }
  &.disabled {
    .tc-switcher-wrap {
      cursor: not-allowed;

      .tc-switcher-handle {
        background: map-get($_bg, disabled);
        border-color: map-get($_border, disabled);

        .check-detector {
          background: map-get($_color, disabled);
        }
      }
      .tc-switcher-label {
        color: map-get($_label-color, disabled);
      }
    }
    &.checked {
      .tc-switcher-wrap {
        .tc-switcher-handle {
					background: rgba( map-get($_bg, active) , .5);
					border-color: transparent;
          .check-detector {
            background: map-get($_color, disabled);
          }
        }
      }
    }
  }
}
